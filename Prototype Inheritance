//js...

let z;
z =Math;
z=Math.PI;
z=Math.E;
z=Math.ceil(5.6);

console.log(z);

//object literal
let car ={
    name:'maruti',
    topspeed:50,
    run:function(){
        console.log("car is runingza    ");
    }
    
}
//console.log(car);
//creating a constructor for car  
function generalcar(givenname,givenspeed){
    this.name=givenname;
    this.topspeed=givenspeed;
    this.run=function(){
        console.log(`${this.name} is runing`);
    }
}
car1= new generalcar('tata',130);
car2=new generalcar('maruti',80);


//object prototype
generalcar.prototype.getname=function(){
        return this.name;
}
console.log(car1);
console.log(car1.toString());

const proto={
    hello:function(){
        return "i'm good";
    },
    changename:function(newname){
        this.name=newname;
    }
}
//this create object pranjal
const pranjal=Object.create(proto);
pranjal.name='pranjal choudhary'
pranjal.role='programmer'
pranjal.place='rajasthan'
pranjal.changename('pranjal2')
console.log(pranjal)
//this also create object pranjal
const pranjal1=Object.create(proto,{
    name:{value:'pranjal choudhary' ,  Writable:true},
    role:{value:'programmer'},
});

pranjal1.changename('jaat');
console.log(pranjal1);

function empolyee(name,salary,age){
    this.name=name;
    this.salary=salary;
    this.age=age;
}
empolyee.prototype.slogan=function () {
    return  `this is a best company Regards,  ${this.name}`;
}
let rohan=new empolyee('rohan',1000,18);
console.log(rohan);


function worker(name,salary,age, language){
    empolyee.call(this,name,salary,age);
    this.language=language;
}
//inherit the prototype
worker.prototype=Object.create(empolyee.prototype);
//manually set the constructor
worker.prototype.constructor=worker;
let raju=new worker("raju",2000,33,'hindi');
console.log(raju)
